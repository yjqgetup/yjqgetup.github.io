<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-01-25T05:05:02.009Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>php学习一</title>
    <link href="http://example.com/2021/01/25/php%E5%AD%A6%E4%B9%A0%E4%B8%80/"/>
    <id>http://example.com/2021/01/25/php%E5%AD%A6%E4%B9%A0%E4%B8%80/</id>
    <published>2021-01-25T04:19:15.000Z</published>
    <updated>2021-01-25T05:05:02.009Z</updated>
    
    <content type="html"><![CDATA[<p>一、PHP语法<br>1、PHP 脚本可以放在文档中的任何位置。<br>2、PHP 脚本以 <?php 开始，以 ?> 结束：<br>3、PHP 文件的默认文件扩展名是 “.php”。<br>4、PHP 文件通常包含 HTML 标签和一些 PHP 脚本代码。<br>5、PHP 中的每个代码行都必须以分号结束。分号是一种分隔符，用于把指令集区分开来。<br>6、通过 PHP，有两种在浏览器输出文本的基础指令：echo 和 print。</p><p>二、PHP变量<br>1、PHP 变量规则：<br>（1）变量以 $ 符号开始，后面跟着变量的名称<br>（2）变量名必须以字母或者下划线字符开始<br>（3）变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）<br>（4）变量名不能包含空格<br>（5）变量名是区分大小写的（$y 和 $Y 是两个不同的变量）<br>2、PHP变量作用域：<br>*local     *global     *static      *parameter<br>（1）局部和全局作用域<br> 在所有函数外部定义的变量，拥有全局作用域。除了函数外，全局变量可以被脚本中的任何部分访问，要在一个函数中访问一个全局变量，需要使用 global 关键字。<br>在 PHP 函数内部声明的变量是局部变量，仅能在函数内部访问：<br>实例<br>||&lt;?php<br>$x=5; // 全局变量</p><p>function myTest()<br>{<br>    $y=10; // 局部变量<br>    echo “<p>测试函数内变量:<p>“;<br>    echo “变量 x 为: $x”;<br>    echo “<br>“;<br>    echo “变量 y 为: $y”;<br>} </p><p>myTest();</p><p>echo “<p>测试函数外变量:<p>“;<br>echo “变量 x 为: $x”;<br>echo “<br>“;<br>echo “变量 y 为: $y”;<br>?&gt; ||<br>分析： 在以上实例中 myTest() 函数定义了 $x 和 $y 变量。 $x 变量在函数外声明，所以它是全局变量 ， $y 变量在函数内声明所以它是局部变量。</p><p>当我们调用myTest()函数并输出两个变量的值, 函数将会输出局部变量 $y 的值，但是不能输出 $x 的值，因为 $x 变量在函数外定义，无法在函数内使用，如果要在一个函数中访问一个全局变量，需要使用 global 关键字。</p><p>然后我们在myTest()函数外输出两个变量的值，函数将会输出全局变量 $x 的值，但是不能输出 $y 的值，因为 $y 变量在函数中定义，属于局部变量。</p><p>（2）PHP global 关键字<br> global 关键字用于函数内访问全局变量。<br>在函数内调用函数外定义的全局变量，我们需要在函数中的变量前加上 global 关键字：<br>实例：<br>||&lt;?php<br>$x=5;<br>$y=10;</p><p>function myTest()<br>{<br>    global $x,$y;<br>    $y=$x+$y;<br>}</p><p>myTest();<br>echo $y; // 输出 15<br>?&gt;||</p><p>PHP 将所有全局变量存储在一个名为 $GLOBALS[index] 的数组中。 index 保存变量的名称。这个数组可以在函数内部访问，也可以直接用来更新全局变量。<br>上面的实例可以写成这样：<br>实例：<br>||&lt;?php<br>$x=5;<br>$y=10;</p><p>function myTest()<br>{<br>    $GLOBALS[‘y’]=$GLOBALS[‘x’]+$GLOBALS[‘y’];<br>} </p><p>myTest();<br>echo $y;<br>?&gt;</p><p>实例<br>&lt;?php<br>$x=5;<br>$y=10;</p><p>function myTest()<br>{<br>    $GLOBALS[‘y’]=$GLOBALS[‘x’]+$GLOBALS[‘y’];<br>} </p><p>myTest();<br>echo $y;<br>?&gt;||</p><p>（3）Static 作用域<br>当一个函数完成时，它的所有变量通常都会被删除。然而，有时候您希望某个局部变量不要被删除。<br>要做到这一点，请在您第一次声明变量时使用 static 关键字：<br>实例<br>||&lt;?php<br>function myTest()<br>{<br>    static $x=0;<br>    echo $x;<br>    $x++;<br>    echo PHP_EOL;    // 换行符<br>}</p><p>myTest();<br>myTest();<br>myTest();<br>?&gt;||<br>然后，每次调用该函数时，该变量将会保留着函数前一次被调用时的值。<br>注释：该变量仍然是函数的局部变量。</p><p>（4）参数作用域<br>参数是通过调用代码将值传递给函数的局部变量。</p><p>参数是在参数列表中声明的，作为函数声明的一部分：<br>实例<br>||<?phpfunction myTest($x){    echo $x;}myTest(5);?>||</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一、PHP语法&lt;br&gt;1、PHP 脚本可以放在文档中的任何位置。&lt;br&gt;2、PHP 脚本以 &lt;?php 开始，以 ?&gt; 结束：&lt;br&gt;3、PHP 文件的默认文件扩展名是 “.php”。&lt;br&gt;4、PHP 文件通常包含 HTML 标签和一些 PHP 脚本代码。&lt;br&gt;5、PH</summary>
      
    
    
    
    
  </entry>
  
</feed>
